/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.openapitools.model.FinalPriceReceipt;
import org.openapitools.model.ShoppingCart;
import io.swagger.annotations.*;
    import org.springframework.http.HttpStatus;
    import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
    import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
        import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

    import javax.validation.Valid;
    import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
    import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-06-27T13:37:56.950+03:00[Europe/Moscow]")

    @Validated
@Api(value = "receipt",  description = "receipt")
    public interface ReceiptApi {
                default Optional<NativeWebRequest> getRequest() {
                    return Optional.empty();
                    }

            @ApiOperation(value = "Расчитать стоимость позиций в чеке для указанной корзины", nickname = "calculate", notes = "", response = FinalPriceReceipt.class)
            @ApiResponses(value = { 
                @ApiResponse(code = 200, message = "Стоимость успешно расчитана", response = FinalPriceReceipt.class),
                @ApiResponse(code = 400, message = "Некорректный запрос") })
            @RequestMapping(value = "/receipt",
                produces = { "application/json" }, 
                consumes = { "application/json" },
            method = RequestMethod.POST)
        default ResponseEntity<FinalPriceReceipt> calculate(@ApiParam(value = "Данное о магазине и товарах в корзине" ,required=true )  @Valid @RequestBody ShoppingCart cart) {
            getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"total\" : 5.962133916683182, \"discount\" : 0.8008281904610115, \"positions\" : [ { \"price\" : 6.027456183070403, \"regularPrice\" : 1.4658129805029452, \"name\" : \"name\", \"id\" : \"id\" }, { \"price\" : 6.027456183070403, \"regularPrice\" : 1.4658129805029452, \"name\" : \"name\", \"id\" : \"id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

            }

        }
